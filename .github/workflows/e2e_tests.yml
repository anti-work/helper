name: "End-to-end tests"

on:
  pull_request:
    branches: [main]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}

jobs:
  e2e_tests:
    name: End-to-end tests
    runs-on: ubuntu-latest
    timeout-minutes: 15

    services:
      postgres:
        image: pgvector/pgvector:0.7.4-pg15
        env:
          POSTGRES_USER: username
          POSTGRES_PASSWORD: password
          POSTGRES_DB: helperai_development
        ports:
          - 5435:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      redis:
        image: redis:7.0.12
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        env:
          appendonly: "yes"
        ports:
          - 6382:6379

      serverless-redis-http:
        image: hiett/serverless-redis-http:latest
        env:
          SRH_MODE: env
          SRH_TOKEN: example_token
          SRH_CONNECTION_STRING: "redis://redis:6379"
        ports:
          - 8089:80

    env:
      VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
      VERCEL_ORG_ID: ${{ vars.VERCEL_ORG_ID }}
      VERCEL_PROJECT_ID: ${{ vars.VERCEL_PROJECT_ID }}

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Install Vercel CLI
        run: npm i -g vercel

      - name: Install Inngest CLI
        run: npm i -g inngest-cli

      - name: Pull and set up .env.local
        run: |
          cd apps/nextjs
          vercel link --project helper --token=$VERCEL_TOKEN --scope anti-work --yes
          vercel env pull --environment=development --token=$VERCEL_TOKEN --scope anti-work
          test -f .env.local || (echo ".env.local not created" && exit 1)
          cd ../..

      - name: Build workspace
        run: npm run build --workspace packages/*

      - name: Set up database
        # These env vars are needed for createdb CLI tool, app will use POSTGRES_URL from Vercel env
        env:
          PGUSER: username
          PGPASSWORD: password
          PGHOST: localhost
          PGPORT: 5435
          NODE_ENV: development
        run: |
          cd apps/nextjs
          npm run with-dev-env -- npm run db:reset
          npm run with-dev-env -- npm run db:generate
          npm run with-dev-env -- npm run db:migrate

      - name: Build app
        env:
          NODE_OPTIONS: "--max-old-space-size=4096"
        run: cd apps/nextjs && npm run with-dev-env -- npm run build

      - name: Start services
        run: |
          cd apps/nextjs
          export WEB_PORT=$(grep '^WEB_PORT=' .env.local | cut -d '=' -f2 | tr -d '"')
          # Start Next.js
          npm run with-dev-env -- npm start -- -p $WEB_PORT &
          # Start Inngest
          npm run with-dev-env -- npx inngest-cli dev --no-discovery -u http://localhost:$WEB_PORT/api/inngest &
          sleep 15

      - name: Install browser
        run: |
          npx playwright install chromium
